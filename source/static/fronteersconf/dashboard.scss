// Variables:
$color-mild: #eee;
$color-wild: #f2bb00;
$color-hard: #00a0d2;
$color-happy: #5bab40;

// Mixins:
@mixin hocus {
	&:focus {
		@content;
	}
	@media not all and (pointer: coarse) {
		&:hover {
			@content;
		}
	}
}

// Reset:
*,
*::before,
*::after {
	box-sizing: border-box;
	margin: 0;
	border: none;
	padding: 0;
	font-family: inherit;
	font-size: inherit;
	font-style: inherit;
	font-weight: inherit;
	color: inherit;
}
a,
u {
	text-decoration: none;
}
li {
	list-style: none;
}
strong {
	font-weight: bold;
}
time {
	white-space: nowrap;
}
:focus {
	outline: none;
}

// Explicitly make hidden elements, like <svg>, disappear:
[hidden] {
	display: none;
}

// Baseline:
html {
	height: 100%;
	background: black;
	font-display: optional;
	font-family: "Helvetica Neue", sans-serif;
	line-height: 1.5;
}

// Layout:
body {
	position: relative;
	display: flex;
	flex-direction: column;
	align-items: center;
	min-height: 100%;
	background: linear-gradient(white, white);
	padding-bottom: 2rem;
}

// Logo banner:
.banner {
	width: 100%;
	background-color: $color-mild;
	text-align: center;

	& > p {
		display: block;
		background-color: $color-wild;
		padding: 0.5rem;
		line-height: 1.175rem;

		& > * {
			white-space: nowrap;
		}
	}
	& > img {
		width: 100%;
		max-width: 22.5rem;
		height: auto;
		vertical-align: top;
		padding: 0.5rem 1rem;
	}
}

// Navigation:
nav > ul {
	display: flex;
	justify-content: center;
	margin-top: 1rem;

	& > li {
		border-radius: 0.25rem;
		background-color: $color-mild;
		text-align: center;
		line-height: 1.75;
		font-size: 1.125rem;

		&:first-of-type {
			border-radius: 0.25rem 0 0 0.25rem;
		}
		&:last-of-type {
			border-radius: 0 0.25rem 0.25rem 0;
		}
		&[data-state="active"] {
			position: relative;
			background-color: $color-hard;
			padding: 0.5rem 1.5rem;
			color: white;
		}
		&[data-state="active"]::before {
			position: absolute;
			top: 100%;
			left: 50%;
			margin-left: -10px;
			width: 0;
			height: 0;
			border-style: solid;
			border-width: 10px 10px 0 10px;
			border-color: $color-hard transparent transparent transparent;
			content: "";
		}
		& > .link {
			transition: color 200ms 25ms;
			display: block;
			border: none;
			padding: 0.5rem 1.5rem;

			& > span {
				transition: border-color 200ms 25ms;
				border-bottom: 2px solid transparent;
			}
			&:focus > span {
				border-color: currentColor;
			}
			@media not all and (pointer: coarse) {
				&:hover > span {
					border-color: currentColor;
				}
			}
		}
	}
}

header {
	display: flex;
	flex-direction: column;
	margin: 3.5rem 0;
	max-width: 37.5rem;
	padding: 0 2rem;
}

section {
	display: flex;
	flex-direction: column;
	position: relative;
	margin-left: 1rem;
	margin-right: 1rem;
	width: calc(100% - 2rem);
	max-width: 37.5rem;
	background-color: $color-mild;
	padding: 2rem;

	& + section {
		margin-top: 3.5rem;
	}
}

body > footer {
	position: absolute;
	bottom: 0;
	left: 0;
	right: 0;
	display: flex;
	justify-content: center;
	align-items: center;
	width: 100%;
	height: 2rem;
	background-color: black;
	padding: 0 1rem;
	font-family: sans-serif;
	font-size: 0.675rem;
	color: slategray;

	img {
		filter: invert(0.5);
		margin: 0 0.125rem;
		width: auto;
		height: 1.125rem;
		vertical-align: -0.375rem;
	}
}

// Form:
form {

	& > section:last-of-type {
		border-bottom: 4.5rem solid $color-mild;
	}
	& > footer {
		transition: transform 350ms;
		position: absolute;
		bottom: 0;
		left: 0;
		right: 0;
		z-index: 2;
		box-shadow: 0 0 0.5rem rgba(0, 0, 0, 0.185);
		height: 6.5rem;
		overflow: hidden;

		& > section {
			transition: transform ease-out 200ms;
			justify-content: center;
			align-items: center;
			margin: 0;
			width: 100%;
			max-width: none;
			min-height: 100%;
			background-color: white;
			padding: 0;

			label {
				display: block;
				margin: 2rem 0 0.125rem 0 !important;
				font-weight: bold;
			}
		}
		small {
			margin-top: 0.5rem;
			font-size: 0.75rem;
			color: slategray;
		}
		h3 {
			margin: 0;
			padding-left: 3.5rem;
			font-weight: bold;
		}
		svg {
			float: left;
			margin: -0.5rem 0 0 -3.25rem;
			width: 2.5rem;
			height: 2.5rem;
		}
	}
	& + footer {
		display: none;
	}

	&[data-visible="false"] > footer {
		transform: translateY(100%);
	}
	&[data-visible="true"] > footer {
		position: fixed;
	}
	&[data-state="sending"] > footer > section {
		transform: translateY(-100%);
	}
	&[data-state="sending"] section:nth-of-type(2) > h3::before {
		animation: flip 1s cubic-bezier(0.75, 0.125, 0.125, 0.75) infinite;
		transform: rotate(-1turn);
		float: left;
		margin: -0.5rem 0 0 -3.5rem;
		width: 2.5rem;
		height: 2.5rem;
		border: 0.25rem solid $color-mild;
		border-top-color: $color-hard;
		border-radius: 50%;
		content: "";
	}
	&[data-state="sent"] > footer > section {
		transform: translateY(-200%);
	}
}

// Form input:
input,
textarea,
select {
	transition: box-shadow 200ms;
	display: block;
	border: 1px solid silver;
	border-radius: 0.175rem;
	padding: 0.25rem 0.5rem;
	background: white url(""); // Safari needs this.

	&:focus {
		box-shadow: 0 0 0 1px $color-hard;
		border-color: $color-hard;
	}
}
input {
	height: 2.25rem;

	&:not([size]) {
		width: 100%;
	}
}
input,
textarea {
	resize: none;
	width: 100%;
	line-height: 1.65;
}
select {
	appearance: none;
	width: 100%;
	height: 2.25rem;
}

// Buttons:
button {
	transition: box-shadow 200ms 25ms, border-radius 200ms 25ms;
	height: 3rem;
	min-width: 10rem;
	border-radius: 0.25rem;
	background-color: $color-happy;
	padding: 0 1rem;
	font-size: 1.25rem;
	font-weight: bold;
	color: white;
	user-select: none;

	@include hocus {
		box-shadow: 0 0 0 2px white, 0 0 0 4px $color-hard;
		border-radius: 0.125rem;
	}
}

// Headings and paragraphs:
h1,
h2,
h3 {
	line-height: 1.15;
	font-weight: bold;

	* + & {
		margin-top: 5rem !important;
	}
}
h1 {
	margin-bottom: 1rem;
	font-size: 1.85rem;
}
h2 {
	margin-bottom: 0.5rem;
	font-size: 1.5rem;

	small {
		display: block;
		margin: 0.125rem 0 1rem 0;
		font-size: 0.75rem;
		font-weight: normal;
		color: slategray;
	}
}
h3 {
	margin-bottom: 0.25rem;
	font-size: 1.25rem;
}
p + * {
	margin-top: 1.25rem;
}
p small {
	display: block;
	margin-bottom: 0.25em;
	max-width: 95%;
	line-height: 1.35;
	font-size: 0.895rem;
	color: slategray;
}

// Tables:
table {
	margin: 2rem -2rem 0 -2rem;
	width: calc(100% + 4rem);
	border-collapse: collapse;
	line-height: 1.35;

	& + table {
		margin-top: 3.5rem;
	}
}
caption {
	padding: 0 2rem 0.5rem 2rem;
	text-align: left;
	line-height: 1.15;
	font-size: 1.35rem;
	font-weight: 600;
	color: slategray;
}
tr:nth-of-type(odd) {
	background-color: rgba(0, 0, 0, 0.035);
}
tr > * {
	padding: 0.5rem;

	&:first-child {
		padding-left: 2rem;
	}
	&:last-child {
		padding-right: 2rem;
	}
}
th {
	padding-top: 0.65rem !important;
	padding-bottom: 0.65rem !important;
	vertical-align: top;
	text-align: left;
	line-height: 1.15;
	font-weight: 600;
}
td {
	vertical-align: top;

	small {
		display: block;
		line-height: 1.35;
		font-size: 0.895rem;
		color: slategray;
	}
}

// Links:
.link {
	transition: border-color 200ms 25ms;
	border-bottom: 2px solid transparent;
	text-decoration: none;
	color: $color-hard;

	@include hocus {
		border-color: currentColor;
		color: $color-hard;
	}
	&--modest {
		font-size: 0.8125rem;
		color: slategray;
	}
}

// Icons:
.icon {
	display: inline-block;
	margin-right: 0.5em;
	width: 1.25em;
	height: 1.25em;
	vertical-align: -0.275em;
}

// Contact details:
.contact {
	align-self: center;
	display: flex;
	flex-direction: column;
	align-items: flex-start;
	margin-top: 2rem;

	& > li + li {
		margin-top: 0.5rem;
	}
	& .link {
		transition: color 200ms 25ms;
		display: block;
		border: none;
		line-height: 1.75;

		&:not(.link--modest) {
			border-radius: 0.25rem;
			background-color: $color-mild;
			padding: 0.25rem 1rem 0.25rem 0.5rem;
		}
		& > span {
			transition: border-color 200ms 25ms;
			border-bottom: 2px solid transparent;
		}
		&:focus > span {
			border-color: currentColor;
		}
		@media not all and (pointer: coarse) {
			&:hover > span {
				border-color: currentColor;
			}
		}
	}
	&--inverted .link:not(.link--modest) {
		background-color: white;
	}
	& .link--modest {
		padding: 0.25rem 0.5rem;

		& > span {
			vertical-align: 1px;
		}
	}
}

// Stickers:
.sticker {
	transition: border-color 250ms 25ms, color 250ms 25ms;
	position: absolute;
	top: -2rem;
	right: 1rem;
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
	box-shadow: 0 -0.125rem 0.125rem rgba(0, 0, 0, 0.075);
	width: 5rem;
	height: 5rem;
	border: 2px solid transparent;
	border-radius: 50%;
	background-color: white;
	font-size: 0.8125rem;
	color: slategray;
	cursor: default;

	@include hocus {
		border-color: currentColor;
		color: $color-hard;
	}
	& > svg {
		display: block;
		margin-bottom: 0.25rem;
		width: 1.25em;
		height: 1.25em;
	}
	& > span {
		display: block;
		width: 85%;
		text-align: center;
		line-height: 1.15;
	}
	& + h2 {
		margin-top: 0 !important;
		padding-right: 3.5rem;
	}
}

// Selects:
.select {
	position: relative;

	& > svg {
		position: absolute;
		top: 0;
		right: 0;
		width: 2.25rem;
		height: 2.25rem;
		padding: 0.5rem;
		color: silver;
		pointer-events: none;
	}
}

// Dialogs:
.dialog {
	transition: transform 350ms, opacity 350ms ease-in-out;
	transform: translateX(-50%) translateY(-50%);
	position: fixed;
	top: 50%;
	left: 50%;
	box-shadow: 0 0 0 50vmax rgba(0, 0, 0, 0.5), 0 0 1.5rem rgba(0, 0, 0, 0.25);
	width: calc(100% - 2rem);
	max-width: 30rem;
	min-height: 10rem;

	& > label {
		position: absolute;
		top: 0;
		right: 0;
		width: 3.5rem;
		height: 3.5rem;

		& > svg {
			width: 100%;
			height: 100%;
			padding: 1rem;
			color: $color-hard;
		}
		&::before {
			transform: translateX(-50%) translateY(-50%);
			position: fixed;
			top: 50%;
			left: 50%;
			z-index: -1;
			box-sizing: content-box;
			border: solid transparent;
			border-width: 50vh 50vw;
			content: "";
		}
	}
	& > div {
		background-color: white;
		padding: 2rem;
	}
	input:not(:checked) ~ & {
		transition-duration: 100ms;
		transform: translateX(-50%) translateY(-50%) translateY(25%);
		opacity: 0;
		pointer-events: none;
	}
}

// File (mostly image) uploads:
.upload {
	align-self: center;
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
	position: relative;
	width: 20rem;
	height: 22.5rem;
	border: 1px solid silver;
	border-radius: 0.175rem;
	background-color: white;
	padding-bottom: 0.5rem;

	& > input {
		position: absolute;
		top: 0;
		left: 0;
		z-index: 1;
		opacity: 0;
		width: 100%;
		height: 100%;
		border: none;
		padding: 0;
	}
	& > img {
		animation: flip 500ms ease-in-out forwards;
		opacity: 0;
		width: 100%;
		height: calc(100% - 2.5rem);
		object-fit: cover;
		padding: 0.5rem;

		&:not([src]),
		&[src] ~ svg {
			display: none;
		}
		&[src] ~ button::before {
			content: attr(data-upload-label)
		}
	}
	& > svg {
		margin-bottom: 0.5rem;
		width: 8.75rem;
		height: auto;
		color: rgba(0, 0, 0, 0.125);
	}
	& > button {
		position: relative;
		z-index: 1;
		min-width: 8.75rem;
		height: 2.5rem;
		font-size: 1rem;

		&::before {
			content: attr(data-upload-placeholder);
		}
	}
	&[data-state="sending"] > button {
		opacity: 0;
		pointer-events: none;
	}
	&[data-state="sending"]::after {
		animation: flip 1s cubic-bezier(0.75, 0.125, 0.125, 0.75) infinite;
		transform: rotate(-1turn);
		position: absolute;
		bottom: 0;
		left: 50%;
		z-index: 1;
		margin: 0 0 0.5rem -1.25rem;
		width: 2.5rem;
		height: 2.5rem;
		border: 0.25rem solid $color-mild;
		border-top-color: $color-hard;
		border-radius: 50%;
		content: "";
	}
}

// Responsive all the things! /o/:
@media (max-width: 560px) {
	nav > ul {
		flex-direction: column;
		margin-top: 0.5rem;

		& > li {
			order: 0;
			border-radius: 0.25rem !important;
			margin: 0.5rem 0 0 0;

			&[data-state="active"] {
				order: 1;
			}
		}
	}
	input {
		width: 100% !important;
	}
	.upload {
		width: 17.5rem;
		height: 20rem;
	}
}
@media (max-width: 420px) {
	header {
		margin-top: 1.75rem;
		padding: 0 1rem;
	}
	section {
		margin: 0 !important;
		width: 100%;
		padding: 2rem 1rem;
	}
	h1 {
		margin-bottom: 2.5rem;
		text-align: center;
	}
	table {
		margin-left: -1rem;
		margin-right: -1rem;
		width: calc(100% + 2rem);
	}
	caption {
		padding-left: 1rem;
		padding-right: 1rem;
	}
	tr > *:first-child {
		padding-left: 1rem;
	}
	tr > *:last-child {
		padding-right: 1rem;
	}
}
@media (max-width: 380px) {
	.upload {
		margin-top: 0;
		width: 100%;
		max-width: none;
	}
}

// Responsive helpers:
@media (min-width: 561px) {
	[data-hide-when="wide"] {
		display: none;
	}
}
@media (max-width: 560px) {
	[data-hide-when="narrow"] {
		display: none;
	}
}

// FLIP animation:
@keyframes flip {
	to {
		transform: none;
		opacity: 1;
	}
}
